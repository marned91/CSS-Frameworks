import{A as d,a as l,b as u}from"./constants-DQWCF818.js";async function g(o,a=!1){let f=`${d}/${o}`;const i=localStorage.getItem("token");a&&(f+="?_author=true");const e={"Content-Type":"application/json",Authorization:`Bearer ${i}`,"X-Noroff-API-Key":l};try{const t=await fetch(f,{method:"GET",headers:e});if(t.ok){const{data:r}=await t.json();return r}else{const r=await t.json();throw new Error(r.message||"Failed to fetch post")}}catch(t){throw t}}async function S(o=12,a=1,f,i=!0){let e=`${d}`;const t=new URLSearchParams;o&&t.append("limit",o),a&&t.append("page",a),i&&t.append("_author",!0),t.toString()&&(e+=`?${t.toString()}`);const s={"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`,"X-Noroff-API-Key":l};try{const c=await fetch(e,{method:"GET",headers:s});if(c.ok){const{data:p,meta:n}=await c.json();return{data:p,meta:n}}else{const p=await c.json();throw new Error(p.message||"Failed to fetch users's posts")}}catch(c){throw c}}async function P(o=12,a=1,f,i=!0){const e=JSON.parse(localStorage.getItem("user")),t=e==null?void 0:e.name;let r=`${u}/${t}/posts`;const s=new URLSearchParams;o&&s.append("limit",o),a&&s.append("page",a),i&&s.append("_author",!0),s.toString()&&(r+=`?${s.toString()}`);const p={"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`,"X-Noroff-API-Key":l};try{const n=await fetch(r,{method:"GET",headers:p});if(n.ok){const{data:h,meta:m}=await n.json();return{data:h,meta:m}}else{const h=await n.json();throw new Error(h.message||"Failed to fetch users's posts")}}catch(n){throw n}}export{g as a,P as b,S as r};
